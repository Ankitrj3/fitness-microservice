# =================================================================
# AI SERVICE ENVIRONMENT CONFIGURATION - SAMPLE/REFERENCE FILE
# =================================================================
# 
# Instructions:
# 1. Copy this file to .env in the same directory
# 2. Update the values according to your environment
# 3. Never commit .env file to version control (should be in .gitignore)
# 4. Keep sensitive information like API keys secure
#
# =================================================================

# =================================================================
# APPLICATION CONFIGURATION
# =================================================================
# Service name as it appears in Eureka registry
SPRING_APPLICATION_NAME=aiservice

# Port on which the service will run
# Development: 8080, 8081, 8082, etc.
# Production: Usually behind load balancer
SERVER_PORT=8080

# =================================================================
# DATABASE CONFIGURATION - MongoDB
# =================================================================
# MongoDB connection URI
# Local Development:
MONGO_URI=mongodb://localhost:27017/airecommendationfitness
# Docker Compose:
# MONGO_URI=mongodb://mongodb:27017/airecommendationfitness
# MongoDB Atlas (Cloud):
# MONGO_URI=mongodb+srv://username:password@cluster.mongodb.net/airecommendationfitness?retryWrites=true&w=majority
# MongoDB with Authentication:
# MONGO_URI=mongodb://username:password@localhost:27017/airecommendationfitness?authSource=admin

# Database name
MONGO_DATABASE=airecommendationfitness

# =================================================================
# SERVICE DISCOVERY - Eureka Configuration
# =================================================================
# Eureka server URL for service registration and discovery
# Local Development:
EUREKA_CLIENT_SERVICE_URL=http://localhost:8761/
# Docker Environment:
# EUREKA_CLIENT_SERVICE_URL=http://eureka-server:8761/
# Production with multiple Eureka servers:
# EUREKA_CLIENT_SERVICE_URL=http://eureka1.company.com:8761/,http://eureka2.company.com:8761/

# =================================================================
# MESSAGE QUEUE - Apache Kafka Configuration
# =================================================================
# Kafka broker addresses
# Local Development:
KAFKA_BOOTSTRAP_SERVERS=localhost:9092
# Docker Compose:
# KAFKA_BOOTSTRAP_SERVERS=kafka:9092
# Production cluster:
# KAFKA_BOOTSTRAP_SERVERS=kafka-broker1:9092,kafka-broker2:9092,kafka-broker3:9092

# Consumer group ID for this service
# Should be unique per service and environment
KAFKA_CONSUMER_GROUP_ID=activity-processor-group

# Topic name for activity events
KAFKA_TOPIC_NAME=activity-events

# =================================================================
# EXTERNAL API - Google Gemini AI Configuration  
# =================================================================
# Gemini API endpoint URL
GEMINI_API_URL=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent

# Gemini API Key - KEEP THIS SECURE!
# Get your API key from: https://makersuite.google.com/app/apikey
GEMINI_KEY=your_gemini_api_key_here

# =================================================================
# SPRING CLOUD CONFIGURATION
# =================================================================
# Enable/disable Spring Cloud Config Server
# Set to true if using centralized configuration
SPRING_CLOUD_CONFIG_ENABLED=false

# =================================================================
# ENVIRONMENT-SPECIFIC EXAMPLES
# =================================================================
#
# DEVELOPMENT ENVIRONMENT:
# ========================
# SPRING_APPLICATION_NAME=aiservice-dev
# SERVER_PORT=8080
# MONGO_URI=mongodb://localhost:27017/airecommendationfitness_dev
# EUREKA_CLIENT_SERVICE_URL=http://localhost:8761/
# KAFKA_BOOTSTRAP_SERVERS=localhost:9092
#
# TESTING ENVIRONMENT:
# ===================
# SPRING_APPLICATION_NAME=aiservice-test  
# SERVER_PORT=8081
# MONGO_URI=mongodb://test-db:27017/airecommendationfitness_test
# EUREKA_CLIENT_SERVICE_URL=http://eureka-test:8761/
# KAFKA_BOOTSTRAP_SERVERS=kafka-test:9092
#
# PRODUCTION ENVIRONMENT:
# ======================
# SPRING_APPLICATION_NAME=aiservice
# SERVER_PORT=8080
# MONGO_URI=mongodb+srv://prod-user:secure-password@prod-cluster.mongodb.net/airecommendationfitness_prod
# EUREKA_CLIENT_SERVICE_URL=http://eureka-prod-1:8761/,http://eureka-prod-2:8761/
# KAFKA_BOOTSTRAP_SERVERS=kafka-prod-1:9092,kafka-prod-2:9092,kafka-prod-3:9092
#
# =================================================================